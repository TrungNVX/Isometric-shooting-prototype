using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class BulletPlayerData
{
    public Vector3 dir;
    public float force;
    public int damage;
    public ConfigWeaponRecord cf;
}
public class BulletPlayer : MonoBehaviour
{
    public string namePool;
    public string namePool_impact;
    private Transform trans;
    public Rigidbody rigidbody_;
    public LayerMask mask;
    private bool isFly = false;
    private void Awake()
    {
        trans = transform;
    }
    public void Setup(BulletPlayerData bulletPlayerData)
    {
        trans.forward = bulletPlayerData.dir;
        rigidbody_.AddForce(bulletPlayerData.dir * bulletPlayerData.force);
    }
    // Start is called before the first frame update
    public void OnSpawned()
    {

        isFly = true;
        StartCoroutine("DelayDisable");
    }
    IEnumerator DelayDisable()
    {
        yield return new WaitForSeconds(4);
        BYPoolManager.instance.DeSpawn(namePool, transform);
    }
    private void Update()
    {
        if (!isFly)
            return;
        // trans.Translate(Vector3.forward * Time.deltaTime * 10);
        RaycastHit hit;
        if (Physics.Raycast(trans.position, trans.forward, out hit, 0.5f, mask))
        {
            isFly = false;
            Transform impact = BYPoolManager.instance.Spawn(namePool_impact);
            impact.position = hit.point;
            impact.forward = hit.normal;
            BYPoolManager.instance.DeSpawn(namePool, trans);

        }
    }
}
